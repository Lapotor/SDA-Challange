/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech)
 * (7.5.0-SNAPSHOT). https://openapi-generator.tech Do not edit the class manually.
 */
package de.lapotor.malware.scanner.api;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import java.time.OffsetDateTime;
import java.util.Optional;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

@Generated(
    value = "org.openapitools.codegen.languages.SpringCodegen",
    comments = "Generator version: 7.5.0-SNAPSHOT")
@Validated
@Tag(name = "Utils", description = "the Utils API")
public interface TimeApi {

  default Optional<NativeWebRequest> getRequest() {
    return Optional.empty();
  }

  /**
   * GET /time : Get the current application time
   *
   * @return Successful operation (status code 200) or Internal Server error (status code 500)
   */
  @Operation(
      operationId = "timeGet",
      summary = "Get the current application time",
      tags = {"Utils"},
      responses = {
        @ApiResponse(
            responseCode = "200",
            description = "Successful operation",
            content = {
              @Content(
                  mediaType = "application/json",
                  schema = @Schema(implementation = OffsetDateTime.class))
            }),
        @ApiResponse(responseCode = "500", description = "Internal Server error")
      })
  @RequestMapping(
      method = RequestMethod.GET,
      value = "/time",
      produces = {"application/json"})
  default ResponseEntity<OffsetDateTime> timeGet() {

    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }
}
